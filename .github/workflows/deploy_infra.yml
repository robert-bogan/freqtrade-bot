name: Deploy Infrastructure & Freqtrade

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    env:
      TF_CLOUD_TOKEN: ${{ secrets.TF_CLOUD_TOKEN }}
      TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN }}
      TF_VAR_client_ip: ${{ secrets.CLIENT_IP }}
      TF_VAR_ssh_key_name: ${{ secrets.SSH_KEY_NAME }}
      TF_VAR_luks_key: ${{ secrets.LUKS_KEY }}
      TF_VAR_gocryptfs_pass: ${{ secrets.GOCRYPTFS_PASS }}
    defaults:
      run:
        working-directory: ./infra

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Configure Terraform credentials
        run: |
          mkdir -p ~/.terraform.d
          cat > ~/.terraform.d/credentials.tfrc.json <<EOF
          {
            "credentials": {
              "app.terraform.io": {
                "token": "${{ secrets.TF_CLOUD_TOKEN }}"
              }
            }
          }
          EOF

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve

  deploy-freqtrade:
    name: Deploy Freqtrade
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Create SSH key file
        run: |
          echo "${{ secrets.SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Upload files to server
        run: |
          rsync -avz -e "ssh -i key.pem -o StrictHostKeyChecking=no" --exclude '.git*' ./ ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/freqtrade-bot

      - name: Configure & start Freqtrade
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ~/freqtrade-bot
            cp config/config.json.template user_data/config.json
            export $(cat config/.env | xargs)
            envsubst < config/config.json.template > user_data/config.json
            docker compose down
            docker compose up -d --build
          EOF
